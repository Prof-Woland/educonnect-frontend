import React, { useState, useEffect } from 'react';
import { adminAPI } from '../../context/ApiContext';
import './AdminPanel.css';

const UserManagement = () => {
  const [users, setUsers] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [filter, setFilter] = useState('all');
  const [loading, setLoading] = useState(false);
  const [selectedUser, setSelectedUser] = useState(null);

  useEffect(() => {
    loadUsers();
  }, [searchTerm]);

  const loadUsers = async () => {
    setLoading(true);
    try {
      const data = await adminAPI.getUsers(searchTerm);
      setUsers(data);
      console.log(data); // –ò—Å–ø—Ä–∞–≤–∏–ª: –≤—ã–≤–æ–¥–∏–º data –≤–º–µ—Å—Ç–æ users (–∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã)
    } catch (error) {
      console.error('Error loading users:', error);
    } finally {
      setLoading(false);
    }
  };

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  const filteredUsers = users.filter(user => {
    const matchesSearch = user.login?.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         user.email?.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesFilter = filter === 'all' || user.role === filter;
    return matchesSearch && matchesFilter;
  });

  const handleRoleChange = async (userId, newRole) => {
    try {
      await adminAPI.updateUserRole(userId, newRole);
      loadUsers(); // Reload users to reflect changes
      alert('–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    } catch (error) {
      console.error('Error updating role:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏');
    }
  };

  const handleDeleteUser = async (userId, userLogin) => {
    if (!window.confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "${userLogin}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`)) {
      return;
    }

    try {
      await adminAPI.deleteUser(userId);
      alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
      loadUsers(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    } catch (error) {
      console.error('Error deleting user:', error);
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
    }
  };

  return (
    <div className="user-management">
      <div className="section-header">
        <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h2>
        <div className="search-box">
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –ø–æ email –∏–ª–∏ –∏–º–µ–Ω–∏..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="search-input"
          />
          {/* –î–æ–±–∞–≤–∏–º —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ä–æ–ª—è–º */}
          <select 
            value={filter}
            onChange={(e) => setFilter(e.target.value)}
            className="filter-select"
          >
            <option value="all">–í—Å–µ —Ä–æ–ª–∏</option>
            <option value="student">–°—Ç—É–¥–µ–Ω—Ç—ã</option>
            <option value="teacher">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏</option>
            <option value="admin">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã</option>
          </select>
        </div>
      </div>

      {loading ? (
        <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      ) : (
        <div className="users-grid">
          {filteredUsers.map(user => (
            <div key={user.id} className="user-card">
              <div className="user-info">
                <div className="user-avatar">
                  {user.avatar ? (
                    <img src={user.avatar || '../../../public/vite.svg'} alt={user.login} />
                  ) : (
                    <div className="avatar-placeholder">
                      {user.login?.charAt(0).toUpperCase()}
                    </div>
                  )}
                </div>
                <div className="user-details">
                  <h3>{user.login}</h3>
                  <p className="user-email">{user.email}</p>
                  <div className={`user-role-badge ${user.role}`}>
                    {user.role === 'student' && '–°—Ç—É–¥–µ–Ω—Ç'}
                    {user.role === 'teacher' && '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'}
                    {user.role === 'admin' && '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'}
                  </div>

                  {/* –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                  <div className="user-status">
                    <div className={`status-dot ${user.isOnline ? '' : 'offline'}`}></div>
                    <span>{user.isOnline ? '–í —Å–µ—Ç–∏' : '–ù–µ –≤ —Å–µ—Ç–∏'}</span>
                  </div>

                  {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                  <div className="user-stats">
                    <div className="stat-item">
                      <span className="stat-value">{user.recordedCourses || 0}</span>
                      <span className="stat-label">–ö—É—Ä—Å—ã</span>
                    </div>
                    <div className="stat-item">
                      <span className="stat-value">{user.completedCourses || 0}</span>
                      <span className="stat-label">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</span>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="role-actions">
                <select 
                  value={user.role}
                  onChange={(e) => handleRoleChange(user.id, e.target.value)}
                  className="role-select"
                >
                  <option value="student">–°—Ç—É–¥–µ–Ω—Ç</option>
                  <option value="teacher">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</option>
                  <option value="admin">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                </select>
                
                {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                <button 
                  onClick={() => handleDeleteUser(user.id, user.login)}
                  className="btn-delete-user"
                  title="–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                  disabled={user.role === 'admin'} // –ó–∞–ø—Ä–µ—â–∞–µ–º —É–¥–∞–ª—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
                >
                  üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                </button>
              </div>
            </div>
          ))}
        </div>
      )}

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã */}
      {!loading && filteredUsers.length === 0 && (
        <div className="empty-state">
          <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
        </div>
      )}
    </div>
  );
};

export default UserManagement;